--// Protected by Karrot 1.0 - discord.gg/vPY3XmntKU

return (function()local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIIIlIl = "\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110";local karrotlIIllllI=269;local karrotlIIlllIl=138;local karrotlIIlllII=3;local karrotlIIlIllI=function(a)local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';a=string.gsub(a,'[^'..b..'=]','')return a:gsub('.',function(c)if c=='='then return''end;local d,e='',b:find(c)-1;for f=6,1,-1 do d=d..(e%2^f-e%2^(f-1)>0 and'1'or'0')end;return d end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(c)if#c~=8 then return''end;local g=0;for f=1,8 do g=g+(c:sub(f,f)=='1'and 2^(8-f)or 0)end;return string.char(g)end)end;local karrotlIIlllIl=290;local karrotlIIlIlIl=(function()local function a(b)local c={}for d=0,255 do c[d]={}end;c[0][0]=b[1]*255;local e=1;for f=0,7 do for d=0,e-1 do for g=0,e-1 do local h=c[d][g]-b[1]*e;c[d][g+e]=h+b[2]*e;c[d+e][g]=h+b[3]*e;c[d+e][g+e]=h+b[4]*e end end;e=e*2 end;return c end;local i=a{0,1,1,0}local function j(self,k)local l,d,g=self.S,self.i,self.j;local m={}local n=string.char;for o=1,k do d=(d+1)%256;g=(g+l[d])%256;l[d],l[g]=l[g],l[d]m[o]=n(l[(l[d]+l[g])%256])end;self.i,self.j=d,g;return table.concat(m)end;local function p(self,q)local r=j(self,#q)local s={}local t=string.byte;local n=string.char;for d=1,#q do s[d]=n(i[t(q,d)][t(r,d)])end;return table.concat(s)end;local function u(self,v)local l=self.S;local g,w=0,#v;local t=string.byte;for d=0,255 do g=(g+l[d]+t(v,d%w+1))%256;l[d],l[g]=l[g],l[d]end end;function new(v)local l={}local s={S=l,i=0,j=0,generate=j,cipher=p,schedule=u}for d=0,255 do l[d]=d end;if v then s:schedule(v)end;return s end;return new end)();local fev=getfenv or function()return _ENV end;local karrotlIIlIlII=(function()if not bit then local bit_=nil pcall(function()bit_=require('bit') end)bit=bit_ end local bit=bit or bit32 or(function()local a={_TYPE='module',_NAME='bit.numberlua',_VERSION='0.3.1.20120131'}local b=math.floor;local c=2^32;local d=c-1;local function e(f)local g={}local h=setmetatable({},g)function g:__index(i)local j=f(i)h[i]=j;return j end;return h end;local function k(h,l)local function m(n,o)local p,q=0,1;while n~=0 and o~=0 do local r,s=n%l,o%l;p=p+h[r][s]*q;n=(n-r)/l;o=(o-s)/l;q=q*l end;p=p+(n+o)*q;return p end;return m end;local function t(h)local u=k(h,2^1)local v=e(function(n)return e(function(o)return u(n,o)end)end)return k(v,2^(h.n or 1))end;function a.tobit(w)return w%2^32 end;a.bxor=t{[0]={[0]=0,[1]=1},[1]={[0]=1,[1]=0},n=4}local x=a.bxor;function a.bnot(n)return d-n end;local y=a.bnot;function a.band(n,o)return(n+o-x(n,o))/2 end;local z=a.band;function a.bor(n,o)return d-z(d-n,d-o)end;local A=a.bor;local B,C;function a.rshift(n,D)if D<0 then return B(n,-D)end;return b(n%2^32/2^D)end;C=a.rshift;function a.lshift(n,D)if D<0 then return C(n,-D)end;return n*2^D%2^32 end;B=a.lshift;function a.tohex(w,E)E=E or 8;local F;if E<=0 then if E==0 then return''end;F=true;E=-E end;w=z(w,16^E-1)return('%0'..E..(F and'X'or'x')):format(w)end;local G=a.tohex;function a.extract(E,H,I)I=I or 1;return z(C(E,H),2^I-1)end;local J=a.extract;function a.replace(E,j,H,I)I=I or 1;local K=2^I-1;j=z(j,K)local L=y(B(K,H))return z(E,L)+B(j,H)end;local M=a.replace;function a.bswap(w)local n=z(w,0xff)w=C(w,8)local o=z(w,0xff)w=C(w,8)local N=z(w,0xff)w=C(w,8)local O=z(w,0xff)return B(B(B(n,8)+o,8)+N,8)+O end;local P=a.bswap;function a.rrotate(w,D)D=D%32;local Q=z(w,2^D-1)return C(w,D)+B(Q,32-D)end;local R=a.rrotate;function a.lrotate(w,D)return R(w,-D)end;local S=a.lrotate;a.rol=a.lrotate;a.ror=a.rrotate;function a.arshift(w,D)local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end;local U=a.arshift;function a.btest(w,V)return z(w,V)~=0 end;a.bit32={}local function W(w)return(-1-w)%c end;a.bit32.bnot=W;local function X(n,o,N,...)local T;if o then n=n%c;o=o%c;T=x(n,o)if N then T=X(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bxor=X;local function Y(n,o,N,...)local T;if o then n=n%c;o=o%c;T=(n+o-x(n,o))/2;if N then T=Y(T,N,...)end;return T elseif n then return n%c else return d end end;a.bit32.band=Y;local function Z(n,o,N,...)local T;if o then n=n%c;o=o%c;T=d-z(d-n,d-o)if N then T=Z(T,N,...)end;return T elseif n then return n%c else return 0 end end;a.bit32.bor=Z;function a.bit32.btest(...)return Y(...)~=0 end;function a.bit32.lrotate(w,D)return S(w%c,D)end;function a.bit32.rrotate(w,D)return R(w%c,D)end;function a.bit32.lshift(w,D)if D>31 or D<-31 then return 0 end;return B(w%c,D)end;function a.bit32.rshift(w,D)if D>31 or D<-31 then return 0 end;return C(w%c,D)end;function a.bit32.arshift(w,D)w=w%c;if D>=0 then if D>31 then return w>=0x80000000 and d or 0 else local T=C(w,D)if w>=0x80000000 then T=T+B(2^D-1,32-D)end;return T end else return B(w,-D)end end;function a.bit32.extract(w,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;return J(w,H,...)end;function a.bit32.replace(w,j,H,...)local I=...or 1;if H<0 or H>31 or I<0 or H+I>32 then error'out of range'end;w=w%c;j=j%c;return M(w,j,H,...)end;a.bit={}function a.bit.tobit(w)w=w%c;if w>=0x80000000 then w=w-c end;return w end;local _=a.bit.tobit;function a.bit.tohex(w,...)return G(w%c,...)end;function a.bit.bnot(w)return _(y(w%c))end;local function a0(n,o,N,...)if N then return a0(a0(n,o),N,...)elseif o then return _(A(n%c,o%c))else return _(n)end end;a.bit.bor=a0;local function a1(n,o,N,...)if N then return a1(a1(n,o),N,...)elseif o then return _(z(n%c,o%c))else return _(n)end end;a.bit.band=a1;local function a2(n,o,N,...)if N then return a2(a2(n,o),N,...)elseif o then return _(x(n%c,o%c))else return _(n)end end;a.bit.bxor=a2;function a.bit.lshift(w,E)return _(B(w%c,E%32))end;function a.bit.rshift(w,E)return _(C(w%c,E%32))end;function a.bit.arshift(w,E)return _(U(w%c,E%32))end;function a.bit.rol(w,E)return _(S(w%c,E%32))end;function a.bit.ror(w,E)return _(R(w%c,E%32))end;function a.bit.bswap(w)return _(P(w%c))end;return a end)()local unpack=table.unpack or unpack;local a3;local a4;local a5;local a6=50;local a7={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local a8={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local a9={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function aa(ab,s,e,d)local ac=0;for i=s,e,d do ac=ac+string.byte(ab,i,i)*256^(i-s)end;return ac end;local function ad(ae,af,ag,ah)local ai=(-1)^bit.rshift(ah,7)local aj=bit.rshift(ag,7)+bit.lshift(bit.band(ah,0x7F),1)local ak=ae+bit.lshift(af,8)+bit.lshift(bit.band(ag,0x7F),16)local al=1;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7F then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-127)*(1+al/2^23)end;local function am(ae,af,ag,ah,an,ao,ap,aq)local ai=(-1)^bit.rshift(aq,7)local aj=bit.lshift(bit.band(aq,0x7F),4)+bit.rshift(ap,4)local ak=bit.band(ap,0x0F)*2^48;local al=1;ak=ak+ao*2^40+an*2^32+ah*2^24+ag*2^16+af*2^8+ae;if aj==0 then if ak==0 then return ai*0 else al=0;aj=1 end elseif aj==0x7FF then if ak==0 then return ai*1/0 else return ai*0/0 end end;return ai*2^(aj-1023)*(al+ak/2^52)end;local function ar(ab,s,e)return aa(ab,s,e-1,1)end;local function as(ab,s,e)return aa(ab,e-1,s,-1)end;local function at(ab,s)return ad(string.byte(ab,s,s+3))end;local function au(ab,s)local ae,af,ag,ah=string.byte(ab,s,s+3)return ad(ah,ag,af,ae)end;local function av(ab,s)return am(string.byte(ab,s,s+7))end;local function aw(ab,s)local ae,af,ag,ah,an,ao,ap,aq=string.byte(ab,s,s+7)return am(aq,ap,ao,an,ah,ag,af,ae)end;local ax={[4]={little=at,big=au},[8]={little=av,big=aw}}local function ay(S)local az=S.index;local aA=string.byte(S.source,az,az)S.index=az+1;return aA end;local function aB(S,aC)local aD=S.index+aC;local aE=string.sub(S.source,S.index,aD-1)S.index=aD;return aE end;local function aF(S)local aC=S:s_szt()local aE;if aC~=0 then aE=string.sub(aB(S,aC),1,-2)end;return aE end;local function aG(aC,aH)return function(S)local aD=S.index+aC;local aI=aH(S.source,S.index,aD)S.index=aD;return aI end end;local function aJ(aC,aH)return function(S)local aK=aH(S.source,S.index)S.index=S.index+aC;return aK end end;local function aL(S)local aM=S:s_int()local aN={}for i=1,aM do local aO=S:s_ins()local aP=bit.band(aO,0x3F)local aQ=a8[aP]local aR=a9[aP]local aS={value=aO,op=a7[aP],A=bit.band(bit.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=bit.band(bit.rshift(aO,23),0x1FF)aS.C=bit.band(bit.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=bit.band(bit.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=bit.band(bit.rshift(aO,14),0x3FFFF)-131071 end;aN[i]=aS end;return aN end;local function aT(S)local aM=S:s_int()local aU={}for i=1,aM do local aV=ay(S)local k;if aV==1 then k=ay(S)~=0 elseif aV==3 then k=S:s_num()elseif aV==4 then k=aF(S)end;aU[i]=k end;return aU end;local function aW(S,ab)local aM=S:s_int()local aX={}for i=1,aM do aX[i]=a5(S,ab)end;return aX end;local function aY(S)local aM=S:s_int()local aZ={}for i=1,aM do aZ[i]=S:s_int()end;return aZ end;local function a_(S)local aM=S:s_int()local b0={}for i=1,aM do b0[i]={varname=aF(S),startpc=S:s_int(),endpc=S:s_int()}end;return b0 end;local function b1(S)local aM=S:s_int()local b2={}for i=1,aM do b2[i]=aF(S)end;return b2 end;function a5(S,b3)local b4={}local ab=aF(S)or b3;b4.source=ab;S:s_int()S:s_int()b4.numupvals=ay(S)b4.numparams=ay(S)ay(S)ay(S)b4.code=aL(S)b4.const=aT(S)b4.subs=aW(S,ab)b4.lines=aY(S)a_(S)b1(S)for _,v in ipairs(b4.code)do if v.is_K then v.const=b4.const[v.Bx+1]else if v.is_KB then v.const_B=b4.const[v.B-0xFF]end;if v.is_KC then v.const_C=b4.const[v.C-0xFF]end end end;return b4 end;function a3(ab)local b5;local b6;local b7;local b8;local b9;local ba;local bb;local bc={index=1,source=ab}assert(aB(bc,4)=='\27Lua','invalid Lua signature')assert(ay(bc)==0x51,'invalid Lua version')assert(ay(bc)==0,'invalid Lua format')b6=ay(bc)~=0;b7=ay(bc)b8=ay(bc)b9=ay(bc)ba=ay(bc)bb=ay(bc)~=0;b5=b6 and ar or as;bc.s_int=aG(b7,b5)bc.s_szt=aG(b8,b5)bc.s_ins=aG(b9,b5)if bb then bc.s_num=aG(ba,b5)elseif ax[ba]then bc.s_num=aJ(ba,ax[ba][b6 and'little'or'big'])else error('unsupported float size')end;return a5(bc,'@virtual')end;local function bd(be,bf)for i,bg in pairs(be)do if bg.index>=bf then bg.value=bg.store[bg.index]bg.store=bg;bg.index='value'be[i]=nil end end end;local function bh(be,bf,bi)local bj=be[bf]if not bj then bj={index=bf,store=bi}be[bf]=bj end;return bj end;local function bk(...)return select('#',...),{...}end;local function bl(bm,bn)local ab=bm.source;local bo=bm.lines[bm.pc-1]local b3,bp,bq=string.match(bn,'^(.-):(%d+):%s+(.+)')local br='%s:%i: [%s:%i] %s'bo=bo or'0'b3=b3 or'?'bp=bp or'0'bq=bq or bn;error(string.format(br,ab,bo,b3,bp,bq),0)end;local function bs(bm)local aN=bm.code;local bt=bm.subs;local bu=bm.env;local bv=bm.upvals;local bw=bm.varargs;local bx=-1;local by={}local bi=bm.stack;local bz=bm.pc;while true do local bA=aN[bz]local aP=bA.op;bz=bz+1;if aP<18 then if aP<8 then if aP<3 then if aP<1 then for i=bA.A,bA.B do bi[i]=nil end elseif aP>1 then local bg=bv[bA.B]bi[bA.A]=bg.store[bg.index]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB+bC end elseif aP>3 then if aP<6 then if aP>4 then local A=bA.A;local B=bA.B;local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[A+1]=bi[B]bi[A]=bi[B][bf]else bi[bA.A]=bu[bA.const]end elseif aP>6 then local bf;if bA.is_KC then bf=bA.const_C else bf=bi[bA.C]end;bi[bA.A]=bi[bA.B][bf]else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB-bC end else bi[bA.A]=bi[bA.B]end elseif aP>8 then if aP<13 then if aP<10 then bu[bA.const]=bi[bA.A]elseif aP>10 then if aP<12 then local A=bA.A;local B=bA.B;local C=bA.C;local bD;local bE,bF;if B==0 then bD=bx-A else bD=B-1 end;bE,bF=bk(bi[A](unpack(bi,A+1,A+bD)))if C==0 then bx=A+bE-1 else bE=C-1 end;for i=1,bE do bi[A+i-1]=bF[i]end else local bg=bv[bA.B]bg.store[bg.index]=bi[bA.A]end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB*bC end elseif aP>13 then if aP<16 then if aP>14 then local A=bA.A;local B=bA.B;local bD;if B==0 then bD=bx-A else bD=B-1 end;bd(by,0)return bk(bi[A](unpack(bi,A+1,A+bD)))else local bf,bG;if bA.is_KB then bf=bA.const_B else bf=bi[bA.B]end;if bA.is_KC then bG=bA.const_C else bG=bi[bA.C]end;bi[bA.A][bf]=bG end elseif aP>16 then bi[bA.A]={}else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB/bC end else bi[bA.A]=bA.const end else local A=bA.A;local bH=bi[A+2]local bf=bi[A]+bH;local bI=bi[A+1]local bJ;if bH==math.abs(bH)then bJ=bf<=bI else bJ=bf>=bI end;if bJ then bi[bA.A]=bf;bi[bA.A+3]=bf;bz=bz+bA.sBx end end elseif aP>18 then if aP<28 then if aP<23 then if aP<20 then bi[bA.A]=#bi[bA.B]elseif aP>20 then if aP<22 then local A=bA.A;local B=bA.B;local bK={}local aM;if B==0 then aM=bx-A+1 else aM=B-1 end;for i=1,aM do bK[i]=bi[A+i-1]end;bd(by,0)return aM,bK else local aE=bi[bA.B]for i=bA.B+1,bA.C do aE=aE..bi[i]end;bi[bA.A]=aE end else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB%bC end elseif aP>23 then if aP<26 then if aP>24 then bd(by,bA.A)else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB==bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 end elseif aP>26 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 else local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;bi[bA.A]=bB^bC end else bi[bA.A]=bA.B~=0;if bA.C~=0 then bz=bz+1 end end elseif aP>28 then if aP<33 then if aP<30 then local bB,bC;if bA.is_KB then bB=bA.const_B else bB=bi[bA.B]end;if bA.is_KC then bC=bA.const_C else bC=bi[bA.C]end;if bB<=bC==(bA.A~=0)then bz=bz+aN[bz].sBx end;bz=bz+1 elseif aP>30 then if aP<32 then local aX=bt[bA.Bx+1]local bL=aX.numupvals;local bM;if bL~=0 then bM={}for i=1,bL do local bN=aN[bz+i-1]if bN.op==a7[0]then bM[i-1]=bh(by,bN.B,bi)elseif bN.op==a7[4]then bM[i-1]=bv[bN.B]end end;bz=bz+bL end;bi[bA.A]=a4(aX,bu,bM)else local A=bA.A;local B=bA.B;if not bi[B]==(bA.C~=0)then bz=bz+1 else bi[A]=bi[B]end end else bi[bA.A]=-bi[bA.B]end elseif aP>33 then if aP<36 then if aP>34 then local A=bA.A;local aM=bA.B;if aM==0 then aM=bw.size;bx=A+aM-1 end;for i=1,aM do bi[A+i-1]=bw.list[i]end else local A=bA.A;local bO,bI,bH;bO=assert(tonumber(bi[A]),'`for` initial value must be a number')bI=assert(tonumber(bi[A+1]),'`for` limit must be a number')bH=assert(tonumber(bi[A+2]),'`for` step must be a number')bi[A]=bO-bH;bi[A+1]=bI;bi[A+2]=bH;bz=bz+bA.sBx end elseif aP>36 then local A=bA.A;local C=bA.C;local aM=bA.B;local bP=bi[A]local bQ;if aM==0 then aM=bx-A end;if C==0 then C=bA[bz].value;bz=bz+1 end;bQ=(C-1)*a6;for i=1,aM do bP[i+bQ]=bi[A+i]end else bi[bA.A]=not bi[bA.B]end else if not bi[bA.A]==(bA.C~=0)then bz=bz+1 end end else local A=bA.A;local aH=bi[A]local bR=bi[A+1]local bf=bi[A+2]local bS=A+3;local bK;bi[bS+2]=bf;bi[bS+1]=bR;bi[bS]=aH;bK={aH(bR,bf)}for i=1,bA.C do bi[bS+i-1]=bK[i]end;if bi[bS]~=nil then bi[A+2]=bi[bS]else bz=bz+1 end end else bz=bz+bA.sBx end;bm.pc=bz end end;function a4(bR,bu,b2)local bT=bR.code;local bU=bR.subs;local bV=bR.lines;local bW=bR.source;local bX=bR.numparams;local function bY(...)local bi={}local bZ={}local b_=0;local c0,c1=bk(...)local bm;local c2,bn,bK;for i=1,bX do bi[i-1]=c1[i]end;if bX<c0 then b_=c0-bX;for i=1,b_ do bZ[i]=c1[bX+i]end end;bm={varargs={list=bZ,size=b_},code=bT,subs=bU,lines=bV,source=bW,env=bu,upvals=b2,stack=bi,pc=1}c2,bn,bK=pcall(bs,bm,...)if c2 then return unpack(bK,1,bn)else bl(bm,bn)end;return end;return bY end;return function(c3,bu)return a4(a3(c3),bu or fev(0))end end)();local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIIl="\104\78\90\56\110\71\120\101\74\113\78\48\106\80\111\57\112\54\118\86\47\74\73\69\106\115\55\72\101\88\47\51\102\72\66\71\88\119\116\99\48\98\50\47\47\80\104\87\104\66\101\118\66\72\70\85\109\112\110\80\108\86\87\106\101\73\66\107\118\51\48\120\99\109\47\121\67\104\83\108\108\78\85\86\89\76\51\106\101\66\70\70\87\88\68\84\52\102\79\80\48\118\71\109\110\71\88\85\122\47\87\103\50\109\121\52\102\86\51\82\54\112\84\101\73\55\56\48\47\81\104\54\120\73\97\77\122\43\80\74\72\79\116\99\70\109\56\112\109\120\88\80\55\74\89\118\50\104\56\104\71\79\105\72\51\55\110\84\103\120\76\55\83\78\109\106\115\67\87\54\70\88\66\66\122\70\50\67\78\56\99\77\107\90\72\86\90\113\43\69\72\56\67\82\99\104\108\50\122\122\73\51\76\114\69\70\117\55\69\71\115\110\75\89\43\98\120\98\78\76\77\78\103\113\75\66\118\56\71\69\89\76\115\110\79\121\115\86\88\88\111\108\121\89\57\68\104\97\73\57\54\69\47\50\108\67\69\87\104\55\74\71\85\117\49\50\121\108\120\108\53\83\74\75\83\57\85\119\73\84\66\99\69\76\120\116\55\104\99\70\87\83\81\117\69\72\116\109\79\73\119\80\112\66\104\84\117\111\69\65\52\102\114\55\118\110\97\119\73\65\75\72\53\121\52\77\49\47\103\55\66\118\111\56\51\107\73\73\84\51\83\102\115\86\57\118\110\76\90\57\50\118\114\52\88\79\74\120\51\82\99\116\71\106\107\109\122\89\115\51\107\84\86\51\109\50\98\97\43\79\105\87\87\103\71\76\83\86\121\51\90\79\97\121\80\75\51\55\77\101\97\73\105\115\86\57\105\115\85\50\113\113\119\88\66\56\49\121\113\48\43\111\55\71\47\71\47\106\50\122\72\113\88\118\51\49\85\80\116\78\87\117\86\101\50\57\97\69\102\57\107\51\71\89\118\110\122\82\72\89\79\112\51\57\122\74\118\111\78\52\107\57\70\111\79\48\106\119\90\117\76\69\109\85\115\51\84\66\48\80\116\69\51\51\122\98\50\99\67\113\67\50\109\79\67\57\108\69\51\71\109\65\50\101\76\55\119\77\77\99\67\49\54\67\106\107\122\68\79\71\43\76\51\75\86\101\100\85\86\47\107\56\78\72\119\105\100\118\57\72\86\103\102\54\79\115\113\104\66\113\70\54\47\122\66\76\49\106\51\113\81\65\115\75\112\106\78\113\49\55\89\100\69\109\47\74\109\114\97\115\57\97\80\53\122\116\55\119\103\83\50\114\100\103\54\67\101\57\103\112\107\78\114\72\111\90\105\101\114\103\50\120\121\104\112\121\57\73\116\72\109\73\110\111\115\119\88\53\79\98\121\70\76\78\84\107\102\98\119\104\100\54\79\65\68\78\43\103\65\101\112\52\90\78\57\43\50\108\120\90\97\121\115\74\111\120\122\69\102\69\105\106\67\57\69\48\120\117\77\115\88\103\71\68\56\69\115\98\102\74\79\69\54\80\68\73\103\98\111\65\116\121\75\75\88\67\53\79\106\107\103\98\115\77\73\75\86\57\88\68\67\77\118\103\85\65\51\52\52\112\113\84\65\120\101\70\57\100\104\104\116\122\116\66\118\84\101\55\79\76\80\106\66\72\78\77\43\105\52\68\83\84\98\83\108\83\78\75\51\83\103\75\68\97\87\81\53\73\51\99\104\98\70\82\97\120\66\101\89\69\100\66\115\74\66\48\51\65\84\90\115\110\74\47\100\108\106\81\109\104\72\79\65\56\65\102\65\70\85\71\90\51\80\105\51\76\57\100\116\109\113\112\119\77\52\73\50\67\99\104\65\73\111\53\115\120\79\99\116\81\51\57\67\72\70\72\88\109\105\111\86\114\121\117\57\107\82\49\109\56\84\98\57\68\102\86\108\73\112\48\74\86\83\115\112\49\84\87\54\77\100\78\112\101\118\79\48\112\81\120\47\103\57\98\106\80\113\72\83\120\120\65\48\51\104\43\66\102\101\103\100\74\107\82\115\49\48\104\112\56\65\108\56\74\97\121\109\106\109\102\102\102\113\111\105\66\121\110\50\117\113\88\79\97\111\76\85\99\47\97\83\76\86\67\108\118\71\48\122\88\56\98\122\84\104\70\43\106\54\75\81\119\74\57\113\43\49\97\119\114\77\97\113\101\48\50\111\48\66\108\122\89\69\49\84\71\120\79\52\111\49\100\57\80\112\116\109\101\56\118\103\114\50\65\101\111\71\98\112\121\114\74\47\66\97\76\83\106\89\118\104\98\77\105\48\112\108\82\78\98\82\115\77\48\50\52\89\77\100\103\67\82\75\97\113\74\101\56\57\119\80\83\78\88\72\76\115\65\66\72\90\54\69\67\87\86\70\89\51\56\57\89\78\109\87\51\66\75\112\47\103\55\111\106\99\105\101\72\120\120\100\72\85\120\47\87\72\87\113\115\98\87\70\116\83\76\49\104\86\79\121\50\120\105\80\118\98\72\68\69\122\117\86\70\118\122\43\119\67\75\57\73\86\114\120\71\72\115\84\53\122\48\81\122\81\89\52\98\75\116\80\81\89\113\113\52\102\72\51\101\53\49\118\110\79\108\48\49\107\106\65\76\120\82\90\72\86\73\120\121\77\73\43\98\84\82\83\114\77\73\53\75\82\55\113\111\116\114\80\88\122\101\108\72\51\55\86\116\55\74\100\121\43\83\50\102\108\113\74\121\47\51\48\110\111\83\54\55\56\111\110\50\48\86\53\116\109\110\117\81\117\80\89\49\74\70\72\111\80\57\83\105\115\89\86\68\51\73\53\51\52\53\49\108\75\67\90\78\106\83\66\106\117\118\48\118\69\47\97\108\98\119\101\76\116\108\55\78\88\118\74\106\57\55\98\104\103\83\107\109\80\109\66\68\76\82\97\80\119\76\72\50\99\74\114\43\86\72\67\98\113\66\119\102\100\110\52\118\87\70\116\119\107\109\90\120\48\86\74\88\49\120\111\90\56\53\66\81\85\108\81\48\108\70\47\68\110\52\98\105\117\43\98\110\71\88\86\48\67\115\118\87\98\104\107\48\107\97\65\66\119\71\121\122\57\103\80\103\57\65\83\67\117\51\84\56\79\110\89\113\78\90\56\65\112\103\117\79\98\90\117\107\55\99\53\98\75\82\113\115\114\73\112\98\119\77\56\77\72\120\111\56\84\52\69\49\116\114\48\81\71\76\107\82\115\108\118\51\117\68\82\83\53\79\85\43\111\79\81\117\105\108\75\81\68\54\76\101\71\81\109\100\74\119\122\115\65\113\84\115\99\43\70\107\50\65\99\117\84\89\100\86\49\104\76\113\47\55\112\109\51\122\78\85\84\119\50\84\117\57\80\57\107\54\52\107\68\74\47\83\51\107\67\52\109\106\84\43\70\109\54\75\47\83\122\110\54\89\57\70\101\86\88\65\79\47\47\82\55\74\67\99\108\76\110\49\101\76\83\84\72\75\86\89\53\50\72\75\55\72\82\80\79\57\43\104\79\48\66\71\65\80\77\88\88\72\114\48\86\74\54\67\57\97\90\86\47\56\49\56\115\48\76\53\85\114\78\85\102\116\71\118\52\86\108\106\78\52\105\86\83\74\66\79\90\102\68\86\52\117\87\102\54\121\79\56\69\48\97\82\87\74\114\78\56\81\43\101\98\121\47\76\84\81\65\57\51\70\102\99\47\105\68\70\98\119\82\73\111\74\112\81\66\74\82\102\69\86\102\113\70\118\101\67\105\52\79\108\56\73\107\99\77\119\47\51\118\106\79\66\118\56\66\78\53\105\81\49\82\116\79\74\82\105\103\79\99\90\110\118\87\113\74\110\88\89\97\79\67\101\105\50\103\119\122\110\97\104\97\73\97\48\43\48\122\119\57\119\106\119\122\70\87\47\101\101\103\90\66\105\73\103\90\78\112\122\79\49\117\57\67\47\117\81\56\54\112\113\101\73\117\73\84\67\43\50\54\53\48\65\106\117\122\73\86\113\78\77\109\66\79\107\90\47\115\90\51\54\68\80\82\48\104\76\97\119\114\47\119\69\122\86\117\77\50\75\51\72\51\74\54\120\80\70\50\120\115\83\67\85\56\113\54\90\100\113\77\55\110\70\66\121\80\107\101\70\71\82\43\88\121\99\115\87\85\106\116\54\119\116\74\105\110\110\81\116\115\106\104\50\111\100\50\75\101\113\47\111\53\106\68\114\116\83\74\55\98\89\114\84\84\78\79\85\101\114\107\67\84\103\47\82\122\77\78\72\100\65\80\119\55\109\56\112\112\111\65\108\77\51\110\66\121\85\118\81\56\112\111\43\112\56\69\78\113\111\104\55\53\71\122\113\119\51\43\102\88\72\75\54\48\111\65\69\104\69\73\101\104\43\98\112\72\80\79\68\76\84\49\69\51\66\120\74\74\74\52\51\120\112\119\111\80\53\74\109\107\50\118\105\118\111\116\51\116\76\86\99\43\84\80\90\49\56\116\70\114\88\97\55\114\50\86\118\82\103\113\69\109\51\111\43\71\77\50\57\48\43\69\122\73\106\112\51\49\98\90\82\122\66\55\75\74\66\104\113\89\70\49\120\54\117\120\78\121\78\43\85\67\49\110\122\105\84\49\100\81\83\77\72\114\105\119\111\69\70\84\113\50\77\67\66\50\79\55\81\122\99\97\83\74\90\65\114\76\107\101\113\81\49\90\109\88\75\67\84\107\77\68\52\89\79\99\69\84\72\81\98\106\67\90\118\77\90\89\101\106\52\56\121\78\86\122\115\69\117\56\85\70\82\97\86\66\90\118\98\110\98\76\98\66\87\97\47\43\101\90\118\87\88\72\89\72\81\100\73\102\76\84\110\112\86\107\52\81\88\97\115\47\53\89\99\110\67\70\122\113\106\77\72\112\113\53\118\87\80\117\57\107\50\107\72\110\105\75\87\85\88\68\90\86\120\90\119\105\74\121\47\118\85\120\89\113\88\49\109\119\119\49\50\102\85\104\106\47\101\80\117\108\74\115\48\98\122\52\78\86\88\66\55\114\55\110\47\55\98\118\73\80\56\81\48\120\90\97\88\71\87\54\86\68\113\75\105\53\56\86\108\105\71\106\51\86\122\88\78\117\115\87\51\90\48\72\115\101\80\65\79\81\73\66\90\103\122\65\72\87\78\101\71\122\86\119\90\51\115\82\77\81\74\70\50\112\74\89\54\72\83\77\116\104\69\107\116\68\86\90\72\65\102\105\51\105\116\81\81\79\43\51\89\81\83\111\103\120\121\70\49\110\50\113\84\111\77\112\67\110\114\100\84\48\122\111\53\85\99\84\84\76\102\85\49\98\81\122\88\85\117\75\109\99\119\70\110\47\53\122\85\97\43\109\54\97\101\72\73\85\107\81\83\113\43\86\65\102\74\48\72\75\121\69\73\120\47\48\90\103\47\84\71\57\54\112\75\43\49\76\117\77\121\110\85\71\51\65\54\71\48\98\78\77\85\111\47\72\53\82\68\65\56\88\80\114\49\77\67\86\106\75\53\121\52\66\76\48\113\102\114\118\76\72\70\107\97\104\70\86\120\48\111\65\78\115\120\68\109\73\86\113\68\104\53\77\74\76\117\52\55\112\110\86\81\108\72\74\82\69\66\104\83\114\52\118\84\112\109\104\47\118\112\112\43\104\74\109\78\83\88\82\109\73\120\121\83\100\89\122\78\119\97\55\56\50\99\49\53\65\119\50\107\77\112\115\79\102\100\49\86\90\84\108\79\103\68\117\54\121\56\110\47\65\83\48\122\106\98\82\77\89\117\118\87\88\47\55\119\54\70\71\83\108\105\88\111\90\108\55\77\72\107\54\121\111\102\79\118\98\68\52\65\111\80\72\108\70\87\100\122\101\98\86\113\119\71\84\122\76\106\103\82\118\117\84\51\79\73\99\84\82\103\88\49\72\85\67\73\56\114\98\68\49\48\48\74\76\99\81\85\107\122\57\103\86\70\80\77\54\65\47\105\81\70\111\122\83\100\97\97\105\118\102\86\88\56\115\52\43\101\78\73\88\100\47\57\118\110\78\119\83\84\69\57\77\104\85\54\52\108\106\113\120\57\76\56\99\115\122\83\84\102\106\65\90\100\72\98\73\73\67\55\71\54\57\74\118\113\108\110\54\73\77\113\76\71\120\77\108\47\79\66\107\51\107\52\78\108\78\57\76\79\106\87\71\109\105\82\120\47\73\76\78\117\49\110\106\117\68\55\114\108\100\104\66\77\103\110\73\112\118\65\43\83\74\110\70\67\106\112\83\122\106\112\108\112\100\54\66\120\115\117\82\72\103\100\102\56\80\118\69\85\43\89\89\77\97\120\112\72\88\100\85\54\122\113\78\98\111\118\122\105\113\114\87\112\97\122\122\77\109\113\82\57\66\68\105\83\70\105\82\117\88\71\49\89\104\102\56\49\107\121\83\105\47\122\102\75\70\116\73\80\71\119\115\84\43\76\66\88\100\108\121\54\119\66\73\103\106\87\47\90\81\53\107\80\72\107\97\111\68\80\70\78\69\72\120\119\81\101\121\115\81\73\81\82\74\66\116\122\73\122\86\97\68\104\104\49\56\100\101\48\47\48\72\51\70\49\85\73\88\52\90\49\102\57\86\107\100\51\56\67\87\117\53\111\49\68\75\86\102\109\55\89\114\110\115\67\67\75\108\78\79\101\83\106\118\98\70\115\117\111\121\69\100\107\103\113\71\116\81\102\67\111\82\81\118\65\103\90\89\89\55\66\121\70\98\70\114\80\82\80\117\105\48\88\107\52\78\77\97\54\108\104\75\87\120\119\84\98\57\67\89\55\118\71\56\116\70\49\107\108\77\110\109\119\84\82\75\108\117\104\102\78\73\103\82\77\121\49\76\48\65\107\114\70\101\56\50\87\53\110\107\52\110\119\67\104\97\80\67\122\72\43\81\115\113\90\48\105\113\89\76\76\115\70\106\78\47\49\100\73\108\117\90\53\74\52\106\54\85\84\69\82\55\71\49\103\120\48\110\48\52\90\65\102\119\90\51\78\90\67\65\122\89\57\85\55\76\99\47\119\52\65\110\76\77\90\81\98\76\73\103\82\84\98\118\53\56\78\101\68\74\118\52\78\73\71\106\99\43\117\85\70\118\65\104\112\85\89\109\122\79\119\103\115\107\115\87\114\57\119\99\84\113\108\55\48\106\54\54\49\47\66\86\84\82\114\102\121\117\107\115\109\71\43\105\90\121\73\114\114\121\69\80\72\66\48\74\108\67\116\52\55\77\68\73\86\119\120\57\69\67\113\81\71\110\115\85\81\111\98\75\106\104\56\116\107\99\116\88\90\69\55\106\119\79\47\84\56\98\112\122\79\111\98\101\50\73\86\90\47\88\110\89\74\116\107\87\86\98\65\74\103\52\103\120\109\118\77\55\85\111\81\78\65\115\106\105\90\78\122\55\100\74\86\118\105\85\98\86\49\120\88\68\90\71\49\69\73\49\112\53\112\48\114\78\85\90\108\120\52\104\76\100\73\80\110\83\121\97\101\82\107\67\54\102\78\69\88\67\104\85\105\49\66\106\89\67\65\82\114\106\117\117\47\53\113\112\50\70\52\77\89\50\53\71\69\109\49\117\121\115\81\105\112\109\110\114\120\70\103\115\82\73\53\87\97\114\49\114\49\78\81\109\56\116\116\90\76\88\121\113\111\112\67\98\81\69\53\116\120\81\121\101\88\116\106\51\80\118\43\84\120\67\77\121\117\43\43\108\73\70\113\80\49\117\67\69\117\76\78\97\52\72\48\78\98\78\115\86\68\104\87\110\117\79\98\73\101\57\112\102\105\48\122\83\50\105\84\55\107\80\43\73\57\71\85\70\84\109\56\90\53\104\77\115\82\119\50\80\104\73\82\56\74\82\74\120\83\75\69\85\57\55\104\74\66\90\73\86\104\70\49\74\101\87\88\100\68\113\52\77\66\110\77\97\47\88\107\104\113\68\83\68\50\76\116\88\116\79\107\51\53\87\115\90\57\117\114\104\79\107\71\73\74\54\87\52\51\55\57\73\98\86\51\103\119\97\87\50\56\77\74\116\70\53\118\99\47\120\101\68\77\76\82\116\72\88\78\52\87\73\86\83\105\104\57\88\89\56\75\84\70\85\115\52\82\48\121\49\72\72\120\56\89\75\69\88\106\122\70\57\56\43\77\117\89\72\116\82\52\78\74\43\56\90\49\65\52\122\116\100\97\117\109\80\47\72\71\68\49\48\48\84\47\102\57\100\109\49\82\120\119\76\113\43\68\103\97\120\69\122\111\99\69\76\116\56\85\87\84\110\120\53\87\54\106\51\110\67\116\69\122\43\110\100\83\52\118\88\107\49\122\48\86\65\73\76\52\122\109\82\111\65\52\81\118\78\89\73\66\88\105\110\51\111\90\72\43\119\82\69\74\85\72\67\71\106\73\116\56\99\106\103\106\52\101\66\49\48\78";local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIII='NGI2d3Q8YSp3KmsvYWc9K0c6dw==';local karrotlIIlIIlI=function(a,b)local c=karrotlIIlIlIl(karrotlIIlIllI(a))local d=c["\99\105\112\104\101\114"](c,karrotlIIlIllI(b))return karrotlIIlIllI(d)end;local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIll='\97\121\107\116\88\49\78\108\75\108\112\53\99\106\86\111\100\106\111\114\78\107\66\79\77\119\61\61';local karrotlIIllIIl='\107\97\114\114\111\116\32\102\114\101\101\32\111\98\102\117\115\99\97\116\105\111\110';local karrotlIIlIIII='OS5nRkJxRlY8XydZaSZ2OXdEb3t7I2EkNmcvbyxdZVYvZy86Mjg=';function karrotlIIlIlll(a,b)local c=karrotlIIlIllI(a,b);local d=karrotlIIllIlI;return c,d end;return karrotlIIlIlII(karrotlIIlIIlI(karrotlIIllIll,karrotlIIlIIIl),getfenv(0))()end)()
